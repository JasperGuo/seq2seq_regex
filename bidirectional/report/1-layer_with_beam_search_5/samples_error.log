=======================================
items with a character preceding a numeral . 62
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])|(.)).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])|([<LET>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*)(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.)+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*(.)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])+).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(.)+',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<NUM>]).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<NUM>])*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'},
              {'dfa_equality': 0,
               'prediction': '(.)+((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'items with a character preceding a numeral .',
               'truth': '(..*[<NUM>].*)*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
items with an upper case letter or vowel preceding a numeral . 4
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])|([<LET>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])|([<LET>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'items with an upper case letter or vowel preceding '
                           'a numeral .',
               'truth': '(([<VOW>])|([<CAP>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing 3 or more vowels before a lower-case letter 7
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){5,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing 3 or more vowels before a '
                           'lower-case letter',
               'truth': '(([<VOW>]){3,}).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing a letter or string <M0> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing a letter or string <M0>',
               'truth': '.*([<LET>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing a number after a vowel 5 or more times 15
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]){5,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<NUM>].*){2,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<NUM>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){4,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<VOW>].*){5,}',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<VOW>]){5,}).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a number after a vowel 5 or more '
                           'times',
               'truth': '([<VOW>]).*(([<NUM>]){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing a vowel or string <M0> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])).*(.*)',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a vowel or string <M0>',
               'truth': '.*([<VOW>])|(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing a vowel preceding the string <M0> before the string <M1> 2
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*(<M0>).*).*(.*',
               'score': 0,
               'sentence': 'lines containing a vowel preceding the string <M0> '
                           'before the string <M1>',
               'truth': '([<VOW>].*<M0>.*).*(<M1>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing both a lower-case and capital letter at least 3 times . 72
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){2,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LOW>]){3,}\\b',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LOW>]){3,}\\b',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LOW>]){3,}.*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]){3,}.*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*){3,}',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<CAP>]){3,}).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'},
              {'dfa_equality': 0,
               'prediction': '.*(([<LOW>]){3,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing both a lower-case and capital '
                           'letter at least 3 times .',
               'truth': '([<LOW>].*[<CAP>].*){3,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing number before lower-case letter 6
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<NUM>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines containing number before lower-case letter',
               'truth': '(.*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines containing the string <M0> followed by either the string <M1> , a letter , or a capital letter 5
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>]))|([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>]))|([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<LET>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<CAP>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<CAP>]))|([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<CAP>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines containing the string <M0> followed by '
                           'either the string <M1> , a letter , or a capital '
                           'letter',
               'truth': '(<M0>).*((<M1>)|([<LET>])|([<CAP>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines ending with a number 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)){2,}',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<CAP>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<LET>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<LET>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<CAP>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<CAP>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<CAP>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<LET>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<LET>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>]))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+.*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+.*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*)+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>]).*)+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+.*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*([<NUM>])+.*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])){2,}',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))|(.*[<CAP>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))|(.*[<CAP>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(\\b([<NUM>])+\\b)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.*[<NUM>].*))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])+)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))+',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>])',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]))*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'},
              {'dfa_equality': 0,
               'prediction': '.*(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number',
               'truth': '(.*)(\\b[<NUM>]\\b)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines ending with a number after a vowel 15
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*))+',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<NUM>].*))+',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<VOW>].*)(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*[<VOW>].*)(.*))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>]))',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<VOW>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<VOW>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '([<VOW>]).*((.*)([<NUM>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])(.*)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<NUM>])|([<VOW>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with a number after a vowel',
               'truth': '((.*)([<VOW>])).*([<NUM>]).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]})]
=======================================
lines ending with letter , zero or more times 9
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '.*((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '.*((.*)([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '.*((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '.*((.*)([<LET>]))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<LET>]))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)(.*){2,}).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(([<LET>]))*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])|([<LET>]))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(([<LET>])*))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*([<LET>])*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)((.*)([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(([<LET>])*))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])|([<LET>]))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])|([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])|([<LET>]))*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>])*).*',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(([<LET>])|([<LET>])*)',
               'score': 0,
               'sentence': 'lines ending with letter , zero or more times',
               'truth': '((.*)([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines ending with only a letter at least once 4
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*)',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(([<CAP>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])+).*(([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>])+).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])+).*(([<LET>])).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])+).*(([<LET>])+).*',
               'score': 0,
               'sentence': 'lines ending with only a letter at least once',
               'truth': '((.*)([<LET>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines followed by a vowel before a capital letter 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*([<CAP>]).*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(([<CAP>])+).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<VOW>].*[<CAP>].*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<CAP>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<LET>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*)+',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<CAP>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines followed by a vowel before a capital letter',
               'truth': '([<LOW>].*[<VOW>].*).*([<CAP>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines having 1 of the following: the string <M0> the string <M1> or a letter before the string <M2> 11
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>).*)(.*).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(<M0>)).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|((<M0>)).*)',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<LET>])).*)',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M1>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M1>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M0>)).*(.*)',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M0>)).*(.*).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M0>).*).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(.)+',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>]))+',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M1>)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M1>)|(<M1>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having 1 of the following: the string <M0> '
                           'the string <M1> or a letter before the string <M2>',
               'truth': '((<M1>)|(<M1>)|([<LET>])).*(<M2>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines having a capital letter before a number following a lower-case letter 4
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*[<CAP>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<CAP>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<CAP>].*).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<CAP>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<LOW>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<LOW>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<LOW>].*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines having a capital letter before a number '
                           'following a lower-case letter',
               'truth': '([<CAP>].*[<NUM>].*).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines starting in the string <M0> before a vowel 1
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines starting in the string <M0> before a vowel',
               'truth': '((<M0>)(.*)).*(.*[<VOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines starting in the string <M0> before a vowel',
               'truth': '((<M0>)(.*)).*(.*[<VOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines starting in the string <M0> before a vowel',
               'truth': '((<M0>)(.*)).*(.*[<VOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*).*([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines starting in the string <M0> before a vowel',
               'truth': '((<M0>)(.*)).*(.*[<VOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines starting in the string <M0> before a vowel',
               'truth': '((<M0>)(.*)).*(.*[<VOW>].*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines starting with a lower-case letter with the string <M0> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*)(.*)',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*(.*)).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(<M0>).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines starting with a lower-case letter with the '
                           'string <M0>',
               'truth': '(([<LOW>])(.*)).*(<M0>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines starting with string <M0> and  <M1> , 5 or more times 0
[]
=======================================
lines starting with string <M0> or either a number , character , or letter 14
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>]))|(([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<NUM>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*(([<NUM>])|(.)).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<LET>])).*(.)+',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M0>))|([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M0>))|(<M1>)).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))|(<M0>)).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M0>))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(((<M0>)|()|([<NUM>]))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|(<M0>))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|(.))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|(.))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])|([<NUM>]))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)(.*))|(([<NUM>])|(.)|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>])',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>]))',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(.)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(.)|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines starting with string <M0> or either a number '
                           ', character , or letter',
               'truth': '((<M0>)|(([<NUM>])|(.)|([<LET>])))(.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines that contain a character followed by a letter , at least twice 30
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)|([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*)){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*){2,})',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*){2,})(.*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*){2,})(.*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+([<LET>]).*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((..*[<LET>].*){2,})(.*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*([<LET>])).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(.*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>])).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*..*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '\\b(..*[<LET>].*){2,}\\b',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.*..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.)+([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>].*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '\\b(..*[<LET>].*){2,}\\b',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)|([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>]).*)',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>])+).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*)+',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a character followed by a '
                           'letter , at least twice',
               'truth': '((.){2,}).*([<LET>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines that contain a number followed by a character , at least 4 times 10
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>].*..*){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>].*..*){4,})',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>].*..*){4,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>].*..*){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*(.*)',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>].*..*){4,})(.*)',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*(.){5,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*(.)+',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*..*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<NUM>].*..*){4,}).*',
               'score': 0,
               'sentence': 'lines that contain a number followed by a '
                           'character , at least 4 times',
               'truth': '([<NUM>]).*((.){4,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines that have 4 or more numbers 15
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '((.*)([<NUM>])){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,})(.*)',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)(.*)',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*){2,})',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,})',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){5,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){5,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){2,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){5,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,})',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<NUM>].*){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '.*([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<NUM>]){4,}',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){4,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines that have 4 or more numbers',
               'truth': '.*([<NUM>]){4,}.*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines which have a capital letter or a lower-case letter , 2 or more times 2
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>]))|([<LOW>]).*',
               'score': 0,
               'sentence': 'lines which have a capital letter or a lower-case '
                           'letter , 2 or more times',
               'truth': '(([<CAP>])|([<LOW>])){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines which have the string <M0> followed by a number before the string <M1> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<NUM>].*).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines which have the string <M0> followed by a '
                           'number before the string <M1>',
               'truth': '(<M0>.*[<NUM>].*).*(<M1>).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with 1 or more character , or ending with the string <M0> 2
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<LET>])).*)',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(([<CAP>])).*)',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.)|(.)|(<M0>))',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((.)|((.))|(<M0>))',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((.)|((.)|(<M0>)))',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((.)|((.)|(<M0>))).*((.)+',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'},
              {'dfa_equality': 0,
               'prediction': '((.)|((.)|(<M0>))).*((<M0>)).*',
               'score': 0,
               'sentence': 'lines with 1 or more character , or ending with '
                           'the string <M0>',
               'truth': '((.)+)|((.*)(<M0>))'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with 2 or more numbers 6
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*(.*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,})',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,})',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<NUM>]){2,}',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,})',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '((.*){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,})',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]){2,}).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with 2 or more numbers',
               'truth': '(.*[<NUM>].*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a capital letter after a vowel at least zero times 15
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<NUM>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>])*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<CAP>])(.*))*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<CAP>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<CAP>])(.*))*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*([<LET>].*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>])*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>]){2,}).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>]){4,}).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<CAP>].*[<VOW>].*)*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*([<VOW>])*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '([<CAP>]).*(([<VOW>])*).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>])*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter after a vowel at least '
                           'zero times',
               'truth': '([<VOW>]).*(([<CAP>])*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a capital letter before a character followed by a lower-case letter in them 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<LOW>]).*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<CAP>]).*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<CAP>]).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]).*([<CAP>]).*).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a capital letter before a character '
                           'followed by a lower-case letter in them',
               'truth': '([<CAP>]).*(..*[<LOW>].*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a character after a letter at least 5 times 19
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*)',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>]){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*..*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*)(.*)',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>])).*(.*)',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*){2,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.)+){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.)+([<LET>]){5,}).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.)+){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){5,}).*(.)+',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(.)+([<LET>]){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '(..*[<LET>].*){5,}',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'},
              {'dfa_equality': 0,
               'prediction': '((.){5,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a character after a letter at least 5 '
                           'times',
               'truth': '([<LET>]).*((.){5,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a letter before words with string <M0> 63
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*).*(\\b)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*).*(\\b)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((.*<M0>.*).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>.*<M0>.*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((.*<M0>.*).*)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>.*<M0>.*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)|([<LET>])\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)|([<LET>])\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>.*<M0>.*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>.*<M0>.*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>.*<M0>.*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>.*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>.*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)(.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>.*\\b.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>.*\\b.*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)(.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*)*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)(.*)\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b<M0>\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(\\b[<LET>].*<M0>.*\\b)(.*)',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(\\b[<LET>].*<M0>.*\\b)+',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>)+).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*((<M0>).*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(\\b<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)+\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LET>].*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>]).*(\\b(<M0>)*\\b).*',
               'score': 0,
               'sentence': 'lines with a letter before words with string <M0>',
               'truth': '([<LET>]).*(\\b.*<M0>.*\\b).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a lower-case letter before <M0> 66
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*([<LOW>]).*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LOW>]).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*)(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])+).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(.*<M0>.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*<M0>.*).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*((.*<M0>.*)+).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before <M0>',
               'truth': '([<LOW>]).*((.*<M0>.*)*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a lower-case letter before a character 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<NUM>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<NUM>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*).*([<NUM>].*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>].*).*(.).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '.*([<LOW>]).*((.)+).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*(.).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '(([<LET>])|([<LOW>])).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*).*(.).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.)+).*(.).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>]).*(.).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter before a character',
               'truth': '([<LOW>]).*(.*..*).*'}],
   'dfa': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]})]
=======================================
lines with a lower-case letter preceded by either a vowel , the string <M0> or the string <M1> 20
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<VOW>])|(<M0>)|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<VOW>])|(<M0>)|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<VOW>])|(<M0>)|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LOW>])|(<M0>)|(<M1>)\\b',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<VOW>].*)|(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>].*[<VOW>].*)|(<M0>)|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LOW>])|(<M0>)|(<M1>)\\b',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>])|(([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(.)+',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(<M0>)|([<VOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])|(<M0>)).*(.*)',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<VOW>])|(<M0>)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LOW>])|(<M0>)|(<M1>)\\b',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>])|(([<VOW>])|(<M0>))|(<M1>))',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<VOW>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<LOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M1>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>).*)',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M1>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*([<VOW>])|(<M0>)|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M1>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(([<VOW>])|(<M0>))|(<M1>).*',
               'score': 0,
               'sentence': 'lines with a lower-case letter preceded by either '
                           'a vowel , the string <M0> or the string <M1>',
               'truth': '(([<VOW>])|(<M0>)|(<M1>)).*([<LOW>]).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with a vowel with a character 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<VOW>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])+).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])+).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*)(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>]).*(.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*([<VOW>]).*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>]).*([<VOW>]).*).*(.)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>]).*(.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.)+(([<VOW>])|(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*..*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])+).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*..*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])+).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.*..*))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>])|(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>])|(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|(.*..*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>].*..*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.)(.*))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*([<VOW>])|(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])(.*)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '.*([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.*..*))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.*..*))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((.*)(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*..*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.)).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*((.)+).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*)|((.*)(.))',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '((.*)(.)).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*..*)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|(.))(.*)',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.)*).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<VOW>].*).*(.)+',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'},
              {'dfa_equality': 0,
               'prediction': '([<VOW>]).*((.*)(.)).*',
               'score': 0,
               'sentence': 'lines with a vowel with a character',
               'truth': '(([<VOW>])|(.*..*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with lower-case letter before either character , vowel , or string <M0> 4
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<VOW>]).*)',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(.*)',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>]))|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(.).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<VOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(.)|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(.)|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<VOW>])|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with lower-case letter before either '
                           'character , vowel , or string <M0>',
               'truth': '([<LOW>]).*((.)|([<VOW>])|(<M0>)).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with only zero or more letters 6
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<CAP>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*)(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)(.*){2,}',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<CAP>]).*(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]){2,})',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<CAP>]){2,}).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]){2,})',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){4,}).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*){2,}',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])*).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])*)(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LET>].*)*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){4,}).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*[<LET>].*)*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '([<LET>])*(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<LET>])*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])*)(.*)',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])*).*([<LET>])*',
               'score': 0,
               'sentence': 'lines with only zero or more letters',
               'truth': '(([<CAP>])|([<LET>]))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with or without lower-case letter or upper case letter before the string <M0> 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>])).*(<M0>).*)+',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|(<M0>)).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>)).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*((<M0>)).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '.*(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|(<M0>))).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>])).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>])(.*))',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>]))|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|(<M0>)).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LOW>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*((<M0>)+).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LET>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])*)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>])(.*))',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>])(.*))',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LOW>])).*(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '((([<LOW>])|([<LOW>]))).*(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<LET>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|([<CAP>].*<M0>.*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])|([<CAP>])).*((<M0>)*).*',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'},
              {'dfa_equality': 0,
               'prediction': '(([<LOW>])*)|(([<CAP>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with or without lower-case letter or upper '
                           'case letter before the string <M0>',
               'truth': '(([<CAP>])|(([<LOW>]).*(<M0>).*))*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with string <M0> before letter , 2 or more times 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>){2,}).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>){2,}).*([<LET>].*).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>){2,}).*(([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>){2,}).*(([<LET>]){2,}).*',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>){2,}).*([<LET>]).*(.*)',
               'score': 0,
               'sentence': 'lines with string <M0> before letter , 2 or more '
                           'times',
               'truth': '(<M0>).*(([<LET>]){2,}).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> before <M1> or <M2> or a lower-case letter 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|(([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*(([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((.)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|(.)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((.)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<LET>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<NUM>])).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>])|([<LOW>]))).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>)|(.)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LET>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LOW>]))|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LOW>]))|([<LET>]))).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LOW>]))|([<LET>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>])).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*((<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>)|([<LOW>]))).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(([<LOW>])|([<LOW>]))).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>]))|([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>]))|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*(([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|((<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((<M2>)|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>]))|([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*(([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>))|([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M1>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|((<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|(<M2>))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<LOW>])|(<M2>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|(<M2>)|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|((<M2>)|([<LOW>]))).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|((.*)([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>).*)|(([<LOW>])|([<LOW>]))',
               'score': 0,
               'sentence': 'lines with the string <M0> before <M1> or <M2> or '
                           'a lower-case letter',
               'truth': '(.*<M0>.*).*((<M1>)|(<M2>)|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> before string <M1> followed by string <M2> 11
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*)(.*)',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*(<M2>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>)+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*(.*).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*).*(<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*).*(<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>.*).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>.*).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M1>.*).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*(<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*<M1>.*).*(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> before string <M1> '
                           'followed by string <M2>',
               'truth': '(<M0>).*(<M1>.*<M2>.*).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> containing only a lower-case letter 96
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*)([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>)|([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>)|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LET>]))*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*[<LOW>].*<M0>.*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*)*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*)*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>)+.*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)+).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*)|([<LOW>])',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*)*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>)*.*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*)*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)+).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>.*[<LOW>].*)*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*[<LOW>].*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>)+.*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)+).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(.*<M0>.*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<LOW>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*<M0>.*[<LOW>].*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)*).*(.*[<LOW>].*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((.*)([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> containing only a '
                           'lower-case letter',
               'truth': '((<M0>)|([<LOW>]))+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> followed by a vowel , a capital letter , or a lower-case letter 5
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|(([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<CAP>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<VOW>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LOW>])|([<CAP>])).*([<CAP>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<CAP>])|([<CAP>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*([<CAP>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<VOW>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<CAP>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<VOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(([<VOW>])|([<CAP>])|([<LOW>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*([<VOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<VOW>])|([<CAP>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<VOW>])|([<LOW>])|([<LOW>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<VOW>])|([<CAP>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<VOW>])|([<CAP>])).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by a vowel , a '
                           'capital letter , or a lower-case letter',
               'truth': '(<M0>).*(([<VOW>])|([<CAP>])|([<LOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> followed by either a character or a letter 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*(<M0>)|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>)|([<LET>])|([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>]).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.)|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*(.)',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>])|([<LET>])).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> followed by either a '
                           'character or a letter',
               'truth': '(<M0>).*((.)|([<LET>])|([<VOW>])).*'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with the string <M0> or number before string <M1> 93
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>).*)(.*)(.*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*)(.*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*)(.*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*(<M0>).*)(.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(.)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(.)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>)).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M0>)).*(.*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|((<M0>))|([<NUM>]).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>)*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(.)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>)+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*((<M1>)+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|([<NUM>]))).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M0>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>)|(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>)|(([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>)+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.*[<NUM>].*)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>)|(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])+).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.*[<NUM>].*)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(.*[<NUM>].*)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(<M0>).*(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_44.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>)|(([<NUM>])|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_49.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*([<NUM>]).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>)|(([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(.*(<M0>)|([<NUM>]).*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '.*(<M0>)|(([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*)+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>])).*(<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>)|(([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(.*<M1>.*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*(<M0>)|(([<NUM>]).*(<M1>).*)',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>].*<M1>.*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>].*<M1>.*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>].*<M1>.*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*((<M1>).*).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<NUM>])).*(<M1>).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>].*<M1>.*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))+).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<NUM>])).*(<M1>).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<NUM>])).*(<M1>).*\\b',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>]).*(<M1>)).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<NUM>])|(<M0>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(([<NUM>])+).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(<M0>).*((<M1>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(<M1>)).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '.*((<M0>)|([<NUM>])).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))+',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|(([<NUM>]).*(<M1>).*))*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'},
              {'dfa_equality': 0,
               'prediction': '(((<M0>)|([<NUM>]))*).*(<M1>).*',
               'score': 0,
               'sentence': 'lines with the string <M0> or number before string '
                           '<M1>',
               'truth': '(.*<M0>.*)|([<NUM>].*<M1>.*)'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with with a letter followed by 2 or more of the string <M0> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*(.*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*(.*)',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*(<M0>).*)',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]).*([<LET>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(([<LET>]).*(<M0>){2,}).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*((<M0>).*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(<M0>.*).*',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>]){2,}).*(<M0>).*(.*)',
               'score': 0,
               'sentence': 'lines with with a letter followed by 2 or more of '
                           'the string <M0>',
               'truth': '([<LET>].*<M0>.*){2,}'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with words and zero or more of the string <M0> 94
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '((<M0>)|([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_10.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_11.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_12.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_13.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_14.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_15.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_16.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_17.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*((<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_18.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_19.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(<M0>).*(.*).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(<M0>).*(.*)',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LOW>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_20.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_21.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_22.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_23.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_24.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_25.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_26.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_27.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_28.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_29.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LET>]))*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LET>])\\b).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*((<M0>)|(<M1>)).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*((<M0>)|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_30.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)|([<LET>])\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_31.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_32.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_33.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_34.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_35.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_36.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_37.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_38.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_39.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b(<M0>).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>){2,}\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_40.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_41.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_42.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*(.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_43.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_45.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_46.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_47.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_48.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b(<M0>).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_50.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_51.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)|([<LET>])\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_52.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_53.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_54.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_55.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_56.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_57.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_58.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_59.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b(<M0>)*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_6.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b([<LOW>])*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_60.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*).*([<CAP>]).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_61.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_62.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_63.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_64.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_65.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_66.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_67.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_68.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_69.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_7.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_70.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_71.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_72.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_73.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_74.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_75.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_76.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_77.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_78.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_79.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_8.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b).*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_80.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_81.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_82.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_83.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_84.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_85.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_86.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_87.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_88.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_89.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_9.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*(\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_90.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '.*\\b(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_91.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_92.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_93.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_94.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_95.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b<M0>\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*<M0>.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_96.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*\\b.*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*<M0>.*)*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '(\\b.*<M0>.*\\b)*',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'},
              {'dfa_equality': 0,
               'prediction': '\\b.*(<M0>)*.*\\b',
               'score': 0,
               'sentence': 'lines with words and zero or more of the string '
                           '<M0>',
               'truth': '(\\b(<M0>)*\\b).*(.)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with words ending in string <M0> before lower-case letter 4
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(([<LET>])|([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '((<M0>).*([<LOW>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*(<M0>).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_4.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(\\b(<M0>).*([<LOW>]).*\\b).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(\\b(<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*).*([<LOW>]).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_5.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(\\b(<M0>).*([<LOW>]).*\\b)',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(<M0>).*([<LOW>]).*\\b',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(\\b(<M0>).*([<LOW>]).*\\b).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'},
              {'dfa_equality': 0,
               'prediction': '(\\b(<M0>).*([<LOW>]).*).*',
               'score': 0,
               'sentence': 'lines with words ending in string <M0> before '
                           'lower-case letter',
               'truth': '\\b(.*)(<M0>.*[<LOW>].*)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with words numbers or letters 2
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '(.*([<CAP>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<NUM>]).*(<M0>).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|([<CAP>])).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|(<M0>)).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|([<LET>])).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with words numbers or letters',
               'truth': '\\b([<NUM>])|([<LET>])\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with words with a character , vowel , or string <M0> 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(.*([<CAP>]).*).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*([<CAP>]).*)(.*)',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LET>]))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LET>]))|(([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b((<M0>)|([<LET>]))|(([<LET>])).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|([<NUM>])).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|(<M0>)|([<VOW>])).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<NUM>])|(<M0>))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>))|([<VOW>]).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)\\b)\\b',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|(<M0>))\\b',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|([<VOW>]))\\b',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|(<M0>)).*\\b',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'},
              {'dfa_equality': 0,
               'prediction': '\\b(([<VOW>])|(<M0>)|([<VOW>])\\b).*',
               'score': 0,
               'sentence': 'lines with words with a character , vowel , or '
                           'string <M0>',
               'truth': '\\b(.)|([<VOW>])|(<M0>)\\b'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
=======================================
lines with words with a character followed by a letter 3
[('dfa_epoch_1.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*)(.*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '(.*([<LET>]).*([<LET>]).*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_2.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*(.*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b(.*[<LET>].*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>].*).*([<LET>]).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>].*).*(.*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>].*).*([<LET>].*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]}),
 ('dfa_epoch_3.txt',
  {'detail': [{'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*([<LET>]).*\\b',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>].*).*([<LET>]).*\\b',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*([<LET>].*\\b).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*([<LET>].*).*\\b',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'},
              {'dfa_equality': 0,
               'prediction': '\\b([<LET>]).*([<LET>].*).*',
               'score': 0,
               'sentence': 'lines with words with a character followed by a '
                           'letter',
               'truth': '(\\b..*[<LET>].*\\b)+'}],
   'dfa': [0, 0, 0, 0, 0],
   'string': [0, 0, 0, 0, 0]})]
